spring.application.name=stream-consumer

# 使用动态端口
# 启动两个应用，将会产生两个匿名队列
server.port=0



# 默认的订阅方式 发布-订阅模式（为每个应用分配一个匿名的消费者）
# 通过指定消费组，这样组里面的消费者只会有一个接收到消息
# 此时的队列名为 raw-sensor-data.KKKing（并且只有一个）
# 组内的所有消费者都监听这个队列
spring.cloud.stream.bindings.myQueue.group=ZhangJin


# 消息分区
# Spring Cloud Stream 为分区提供了通用的抽象层，用来在消息中间件的上层实现分区处理
# 所以它对于消息中间件自身是否实现了消息分区并不关心
# 这使得 Spring Cloud Stream 为不具备分区功能的消息中间件也增加了分区功能扩展

# 开启消费分区
spring.cloud.stream.bindings.myQueue.consumer.partitioned=true
# 指定当前消费者的总实例数量
spring.cloud.stream.instance-count=2
# 指定当前实例的索引号
# 从 0 开始
# 启动多个实例的时候，参数从命令行指定，数量递增
spring.cloud.stream.instance-index=0

spring.rabbitmq.host=111.231.82.204
spring.rabbitmq.port=10002
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest



